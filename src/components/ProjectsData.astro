---
import ProjectsCard from "../components/ProjectsCard.astro"
import projects from "../../data/projects.json"
import GitHub from "../icons/GitHub.astro"
import Web from "../icons/Web.astro"
import XMark from '../icons/XMark.astro';
import TagsCarousel from "../components/TagsCarousel.astro"
import ImageIcon from "../icons/ImageIcon.astro"
import Modal from "../components/Modal.astro"
import Tooltip from "../components/Tooltip.astro"

---
<main class="space-y-12 lg:space-y-6">
  <p>Estos son algunos de mis proyectos</p>
  <ul class="space-y-10 lg:space-y-5">
    {projects && projects.map(project => (
      <ProjectsCard blur={project.blur}>
        <div slot="header" class="flex justify-between items-center">
          <div>
            <p data-cy="project-title">{project.title}</p>
            <p data-cy="project-subtitle">{project.subtitle}</p>
          </div>
          <div class="absolute right-2 inline-flex">
            <Tooltip id={project.id} className="inline-flex bg-purple-600 lg:text-[16px] text-[32px] px-6 py-3 lg:py-1.5 lg:px-3 mr-4 lg:mr-4">
              <p>Ver detalles</p>
            </Tooltip>
            <button id={`open-modal-${project.id}`} type="button" disabled={project.blur} class={`${!project.blur && 'hover:text-purple-600 cursor-pointer' }`}>
              <ImageIcon className="w-16 h-16 lg:w-8 lg:h-8" />
            </button>
          </div>
          <Modal id={project.id} >
            <div slot="header" class="flex items-center justify-between lg:px-6 lg:pt-4">
              <p class="text-[40px] lg:text-[20px] font-bold" >Detalles</p>
              <button type="button" id={`close-modal-${project.id}`} class="hover:text-red-500"><XMark className="w-6 h-6" /></button>
            </div>
            <div slot="body" class="px-6 pt-2">
              <TagsCarousel id={project.id} className="row-span-1 mb-10 lg:mb-2" tags={project.tags} />
              <div class="space-y-3 bottom-0">
                <p class="row-span-2 font-normal">{project.description}</p>
                {project.publish 
                  ? <p class="row-span-1 font-normal flex justify-end gap-x-1"><strong class="underline"><i>Presentación:</i></strong>{project.publish}</p> 
                  : <p class="row-span-1 font-bold flex justify-end">No hay fecha de publicación</p>
                }
              </div>
            </div>
          </Modal>
        </div>
        <div slot="buttons">
          <a id={`github-${project.id}`} class={`bg-grey-200 inline-flex items-center px-10 py-6 lg:px-5 lg:py-2 gap-2 border rounded-full lg:rounded-xl ${!project.blur && 'hover:text-purple-600 hover:border-purple-600'}`} href={!project.blur ? project.github : null} target="_blank">
            <GitHub className="w-12 h-12 lg:w-6 lg:h-6" />
            <p class="hidden lg:display-initial">Código fuente</p>
          </a>
          <a id={`website-${project.id}`} class={`bg-grey-200 inline-flex items-center px-10 py-6 lg:px-5 lg:py-2 gap-2 border rounded-full lg:rounded-xl ${!project.blur && 'hover:text-purple-600 hover:border-purple-600'}`} href={!project.blur ? project.link : null} target="_blank">
            <Web className="w-12 h-12 lg:w-6 lg:h-6" />
            <p class="hidden lg:display-initial">Sitio web</p>
          </a>
        </div>
      </ProjectsCard>
    ))}
  </ul>
</main>

<script>
  import projects from "../../data/projects.json";

  projects.map(project => {
    const openModal = document.querySelector(`#open-modal-${project.id}`) as HTMLButtonElement;
    const closeModal = document.querySelector(`#close-modal-${project.id}`) as HTMLButtonElement;
    const modal = document.querySelector(`#modal-${project.id}`) as HTMLElement;
    const tooltip = document.querySelector(`#details-${project.id}`) as HTMLElement;
  
    openModal.addEventListener('mouseover', (e: MouseEvent) => {
      if (!project.blur) {
        e.preventDefault();
        tooltip.classList.remove("hidden"); 
      }
    });
    openModal.addEventListener('mouseleave', (e: MouseEvent) => {
      if (!project.blur) {
        e.preventDefault();
        tooltip.classList.add("hidden");
      }
    })
    openModal.addEventListener('click', (e: MouseEvent) => {
      e.preventDefault();
      if (modal.classList.contains("hidden")) {
        modal.classList.add('flex');
        modal.classList.remove('hidden');
        document.body.style.overflow = "hidden";
      }
    });
    closeModal.addEventListener('click', (e: MouseEvent) => {
      if (modal.classList.contains('flex')) {
        modal.classList.add('hidden');
        modal.classList.remove('flex');
        document.body.style.overflow = "auto";
      }
    })
  })

</script>
---
import Layout from "../layouts/Layout.astro"
import ProjectsCard from "../components/ProjectsCard.astro"
import projects from "../../data/projects.json"
import GitHub from "../icons/GitHub.astro"
import Web from "../icons/Web.astro"
import TagsCarousel from "../components/TagsCarousel.astro"
---

<Layout title="Proyectos">
  <main class="space-y-6">
    <p>Estos son algunos de mis proyectos</p>
    <ul class="w-[500px] space-y-6">
      {projects && projects.map(project => (
        <ProjectsCard blur={project.blur}>
          <div slot="header" class="text-left">
            <p data-cy="project-title">{project.title}</p>
            <p data-cy="project-subtitle">{project.subtitle}</p>
          </div>
          <div slot="body" class="space-y-2">
            <p class="font-bold underline">Descripción</p>
            <p data-cy="project-description">{project.description}</p>
          </div>
          <div slot="tags">
            <TagsCarousel id={project.id} tags={project.tags} />
          </div>
          <div slot="buttons" class="text-right space-x-3">
              <a id={`github-${project.id}`} class={`bg-grey-200 inline-flex px-5 py-2 gap-2 border rounded-xl ${!project.blur && 'hover:text-purple-600 hover:border-purple-600'}`} href={!project.blur ? project.github : null}>
                <GitHub className="w-6 h-6" />
                Código fuente
              </a>
              <a id={`website-${project.id}`} class={`bg-grey-200 inline-flex px-5 py-2 gap-2 border rounded-xl ${!project.blur && 'hover:text-purple-600 hover:border-purple-600'}`} href={!project.blur ? project.link : null}>
                <Web className="w-6 h-6" />
                Sitio web
              </a>
          </div>
        </ProjectsCard>
      ))}
    </ul>
  </main>
</Layout>

<script>
  import projects from "../../data/projects.json";

  projects.map(project => {
    const carousel = document.querySelector(`#carousel-${project.id}`) as HTMLButtonElement;

    let isDown: boolean = false;
    let startX: any;
    let scrollLeft: any;
    const isOverflowing = carousel.scrollWidth > carousel.clientWidth;

    if (isOverflowing && !project.blur) { 
      carousel.classList.add(
        "cursor-pointer", 
        "hover:bg-white", 
        "dark:hover:bg-black", 
        "hover:border",
        "dark:hover:border-purple-600"
      )
      carousel.addEventListener("mousedown", (e: MouseEvent) => {
        isDown = true;
        carousel.classList.add('active');
        startX = e.pageX - carousel.offsetLeft;
        scrollLeft = carousel.scrollLeft;
      });
      carousel.addEventListener('mouseleave', (e: MouseEvent) => {
        isDown = false;
        carousel.classList.remove('active');
      });
      carousel.addEventListener('mouseup', (e: MouseEvent) => {
        isDown = false;
        carousel.classList.remove('active');
      });
      carousel.addEventListener('mousemove', (e: MouseEvent) => {
        if (!isDown) return;
        e.preventDefault();
        const x = e.pageX - carousel.offsetLeft;
        const walk = (x - startX);
        carousel.scrollLeft = scrollLeft - walk;
      });
    }
  })
</script>
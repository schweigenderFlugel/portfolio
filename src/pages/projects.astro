---
import Layout from "../layouts/Layout.astro"
import ProjectsCard from "../components/ProjectsCard.astro"
import projects from "../../data/projects.json"
import GitHub from "../icons/GitHub.astro"
import Web from "../icons/Web.astro"
import TagsCarousel from "../components/TagsCarousel.astro"
import ImageIcon from "../icons/ImageIcon.astro"
import Modal from "../components/Modal.astro"
import Tooltip from "../components/Tooltip.astro"

---

<Layout title="Proyectos">
  <main class="space-y-6">
    <p>Estos son algunos de mis proyectos</p>
    <ul class="w-[500px] space-y-6">
      {projects && projects.map(project => (
        <ProjectsCard blur={project.blur}>
          <div slot="header" class="flex justify-between items-center">
            <div>
              <p data-cy="project-title">{project.title}</p>
              <p data-cy="project-subtitle">{project.subtitle}</p>
            </div>
            <div class="inline-flex">
              <Tooltip id={`images-${project.id}`} className="bg-purple-600 mr-4">
                <p>Ver imágenes</p>
              </Tooltip>
              <button id={`open-modal-${project.id}`} type="button" disabled={project.blur} class={`${!project.blur && 'hover:text-purple-600 cursor-pointer' }`}>
                <ImageIcon className="w-8 h-8" />
              </button>
            </div>
            <Modal id={project.id} images={project.images} />
          </div>
          <div slot="body" class="space-y-2">
            <p class="font-bold underline">Descripción</p>
            <p data-cy="project-description">{project.description}</p>
          </div>
          <div slot="tags">
            <TagsCarousel id={project.id} tags={project.tags} />
          </div>
          <div slot="buttons" class="text-right space-x-3">
              <a id={`github-${project.id}`} class={`bg-grey-200 inline-flex px-5 py-2 gap-2 border rounded-xl ${!project.blur && 'hover:text-purple-600 hover:border-purple-600'}`} href={!project.blur ? project.github : null}>
                <GitHub className="w-6 h-6" />
                Código fuente
              </a>
              <a id={`website-${project.id}`} class={`bg-grey-200 inline-flex px-5 py-2 gap-2 border rounded-xl ${!project.blur && 'hover:text-purple-600 hover:border-purple-600'}`} href={!project.blur ? project.link : null}>
                <Web className="w-6 h-6" />
                Sitio web
              </a>
          </div>
        </ProjectsCard>
      ))}
    </ul>
  </main>
</Layout>

<script>
  import projects from "../../data/projects.json";

  projects.map(project => {
    const tagsCarousel = document.querySelector(`#tags-carousel-${project.id}`) as HTMLButtonElement;
    const openModal = document.querySelector(`#open-modal-${project.id}`) as HTMLButtonElement;
    const closeModal = document.querySelector(`#close-modal-${project.id}`) as HTMLButtonElement;
    const modal = document.querySelector(`#modal-${project.id}`) as HTMLElement;
    const tooltip = document.querySelector(`[data-tooltip="images-${project.id}"]`) as HTMLElement;

    if (project.tags.length) {
      let isDown: boolean = false;
      let startX: any;
      let scrollLeft: any;
      const isOverflowing = tagsCarousel.scrollWidth > tagsCarousel.clientWidth;

      if (isOverflowing && !project.blur) { 
        tagsCarousel.classList.add(
          "cursor-pointer", 
          "hover:bg-white", 
          "dark:hover:bg-black", 
          "hover:border",
          "dark:hover:border-purple-600"
        )
        tagsCarousel.addEventListener("mousedown", (e: MouseEvent) => {
          isDown = true;
          tagsCarousel.classList.add('active');
          startX = e.pageX - tagsCarousel.offsetLeft;
          scrollLeft = tagsCarousel.scrollLeft;
        });
        tagsCarousel.addEventListener('mouseleave', (e: MouseEvent) => {
          isDown = false;
          tagsCarousel.classList.remove('active');
        });
        tagsCarousel.addEventListener('mouseup', (e: MouseEvent) => {
          isDown = false;
          tagsCarousel.classList.remove('active');
        });
        tagsCarousel.addEventListener('mousemove', (e: MouseEvent) => {
          if (!isDown) return;
          e.preventDefault();
          const x = e.pageX - tagsCarousel.offsetLeft;
          const walk = (x - startX);
          tagsCarousel.scrollLeft = scrollLeft - walk;
        });
      }
    } 
    
    if (project.images.length) {
      openModal.addEventListener('mouseover', (e: MouseEvent) => {
        e.preventDefault();
        tooltip.classList.remove("invisible");
      });
      openModal.addEventListener('mouseleave', (e: MouseEvent) => {
        e.preventDefault();
        tooltip.classList.add("invisible");
      })
      openModal.addEventListener('click', (e: MouseEvent) => {
        e.preventDefault();
        if (modal.classList.contains("hidden")) {
          modal.classList.add('flex');
          modal.classList.remove('hidden');
          document.body.style.overflow = "hidden";
        }
      });
      closeModal.addEventListener('click', (e: MouseEvent) => {
        if (modal.classList.contains("flex")) {
          modal.classList.add('hidden');
          modal.classList.remove('flex');
          document.body.style.overflow = "auto";
        }
      })
    }
  })

</script>